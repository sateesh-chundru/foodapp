/*
 * Created on 10 Jul 2016 ( Time 19:19:44 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.freeware.foodrestaurantsapp.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * Persistent class for entity stored in table "customer"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="customer", schema="public" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="CustomerEntity.countAll", query="SELECT COUNT(x) FROM CustomerEntity x" )
} )
public class CustomerEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="customer_id", nullable=false)
    private Integer    customerId   ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="customer_name", length=2147483647)
    private String     customerName ;

    @Column(name="customer_phoneno", length=2147483647)
    private String     customerPhoneno ;

    @Column(name="customer_emailid", length=2147483647)
    private String     customerEmailid ;

    @Column(name="password", length=2147483647)
    private String     password     ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public CustomerEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setCustomerId( Integer customerId ) {
        this.customerId = customerId ;
    }
    public Integer getCustomerId() {
        return this.customerId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : customer_name ( text ) 
    public void setCustomerName( String customerName ) {
        this.customerName = customerName;
    }
    public String getCustomerName() {
        return this.customerName;
    }

    //--- DATABASE MAPPING : customer_phoneno ( varchar ) 
    public void setCustomerPhoneno( String customerPhoneno ) {
        this.customerPhoneno = customerPhoneno;
    }
    public String getCustomerPhoneno() {
        return this.customerPhoneno;
    }

    //--- DATABASE MAPPING : customer_emailid ( varchar ) 
    public void setCustomerEmailid( String customerEmailid ) {
        this.customerEmailid = customerEmailid;
    }
    public String getCustomerEmailid() {
        return this.customerEmailid;
    }

    //--- DATABASE MAPPING : password ( varchar ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(customerId);
        sb.append("]:"); 
        sb.append(customerName);
        sb.append("|");
        sb.append(customerPhoneno);
        sb.append("|");
        sb.append(customerEmailid);
        sb.append("|");
        sb.append(password);
        return sb.toString(); 
    } 

}
