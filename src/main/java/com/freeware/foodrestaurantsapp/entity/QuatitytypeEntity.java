/*
 * Created on 10 Jul 2016 ( Time 19:19:45 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.freeware.foodrestaurantsapp.entity;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;

/**
 * Persistent class for entity stored in table "quatitytype"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="quatitytype", schema="public" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="QuatitytypeEntity.countAll", query="SELECT COUNT(x) FROM QuatitytypeEntity x" )
} )
public class QuatitytypeEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="quatity_id", nullable=false)
    private Integer    quatityId    ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="food_id")
    private Integer    foodId       ;

    @Column(name="quatity_type", length=2147483647)
    private String     quatityType  ;

    @Column(name="amount", length=2147483647)
    private String     amount       ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public QuatitytypeEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setQuatityId( Integer quatityId ) {
        this.quatityId = quatityId ;
    }
    public Integer getQuatityId() {
        return this.quatityId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : food_id ( int4 ) 
    public void setFoodId( Integer foodId ) {
        this.foodId = foodId;
    }
    public Integer getFoodId() {
        return this.foodId;
    }

    //--- DATABASE MAPPING : quatity_type ( varchar ) 
    public void setQuatityType( String quatityType ) {
        this.quatityType = quatityType;
    }
    public String getQuatityType() {
        return this.quatityType;
    }

    //--- DATABASE MAPPING : amount ( varchar ) 
    public void setAmount( String amount ) {
        this.amount = amount;
    }
    public String getAmount() {
        return this.amount;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------

    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(quatityId);
        sb.append("]:"); 
        sb.append(foodId);
        sb.append("|");
        sb.append(quatityType);
        sb.append("|");
        sb.append(amount);
        return sb.toString(); 
    } 

}
