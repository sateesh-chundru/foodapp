/*
 * Created on 10 Jul 2016 ( Time 20:21:13 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.freeware.foodrestaurantsapp.serviceimpl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.freeware.foodrestaurantsapp.beanmapper.OrderquatityServiceMapper;
import com.freeware.foodrestaurantsapp.entity.OrderquatityEntity;
import com.freeware.foodrestaurantsapp.model.Orderquatity;
import com.freeware.foodrestaurantsapp.repository.OrderquatityJpaRepository;
import com.freeware.foodrestaurantsapp.service.OrderquatityService;

/**
 * Implementation of OrderquatityService
 */
@Component
@Transactional
public class OrderquatityServiceImpl implements OrderquatityService {

	@Resource
	private OrderquatityJpaRepository orderquatityJpaRepository;

	@Resource
	private OrderquatityServiceMapper orderquatityServiceMapper;
	
	@Override
	public Orderquatity findById(Integer orderquatity) {
		OrderquatityEntity orderquatityEntity = orderquatityJpaRepository.findOne(orderquatity);
		return orderquatityServiceMapper.mapOrderquatityEntityToOrderquatity(orderquatityEntity);
	}

	@Override
	public List<Orderquatity> findAll() {
		Iterable<OrderquatityEntity> entities = orderquatityJpaRepository.findAll();
		List<Orderquatity> beans = new ArrayList<Orderquatity>();
		for(OrderquatityEntity orderquatityEntity : entities) {
			beans.add(orderquatityServiceMapper.mapOrderquatityEntityToOrderquatity(orderquatityEntity));
		}
		return beans;
	}

	@Override
	public Orderquatity save(Orderquatity orderquatity) {
		return update(orderquatity) ;
	}

	@Override
	public Orderquatity create(Orderquatity orderquatity) {
		OrderquatityEntity orderquatityEntity = orderquatityJpaRepository.findOne(orderquatity.getOrderquatity());
		if( orderquatityEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		orderquatityEntity = new OrderquatityEntity();
		orderquatityServiceMapper.mapOrderquatityToOrderquatityEntity(orderquatity, orderquatityEntity);
		OrderquatityEntity orderquatityEntitySaved = orderquatityJpaRepository.save(orderquatityEntity);
		return orderquatityServiceMapper.mapOrderquatityEntityToOrderquatity(orderquatityEntitySaved);
	}

	@Override
	public Orderquatity update(Orderquatity orderquatity) {
		OrderquatityEntity orderquatityEntity = orderquatityJpaRepository.findOne(orderquatity.getOrderquatity());
		orderquatityServiceMapper.mapOrderquatityToOrderquatityEntity(orderquatity, orderquatityEntity);
		OrderquatityEntity orderquatityEntitySaved = orderquatityJpaRepository.save(orderquatityEntity);
		return orderquatityServiceMapper.mapOrderquatityEntityToOrderquatity(orderquatityEntitySaved);
	}

	@Override
	public void delete(Integer orderquatity) {
		orderquatityJpaRepository.delete(orderquatity);
	}

	public OrderquatityJpaRepository getOrderquatityJpaRepository() {
		return orderquatityJpaRepository;
	}

	public void setOrderquatityJpaRepository(OrderquatityJpaRepository orderquatityJpaRepository) {
		this.orderquatityJpaRepository = orderquatityJpaRepository;
	}

	public OrderquatityServiceMapper getOrderquatityServiceMapper() {
		return orderquatityServiceMapper;
	}

	public void setOrderquatityServiceMapper(OrderquatityServiceMapper orderquatityServiceMapper) {
		this.orderquatityServiceMapper = orderquatityServiceMapper;
	}

}
