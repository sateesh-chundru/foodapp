/*
 * Created on 10 Jul 2016 ( Time 20:21:15 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.freeware.foodrestaurantsapp.serviceimpl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.freeware.foodrestaurantsapp.beanmapper.QuatitytypeServiceMapper;
import com.freeware.foodrestaurantsapp.entity.QuatitytypeEntity;
import com.freeware.foodrestaurantsapp.model.Quatitytype;
import com.freeware.foodrestaurantsapp.repository.QuatitytypeJpaRepository;
import com.freeware.foodrestaurantsapp.service.QuatitytypeService;

/**
 * Implementation of QuatitytypeService
 */
@Component
@Transactional
public class QuatitytypeServiceImpl implements QuatitytypeService {

	@Resource
	private QuatitytypeJpaRepository quatitytypeJpaRepository;

	@Resource
	private QuatitytypeServiceMapper quatitytypeServiceMapper;
	
	@Override
	public Quatitytype findById(Integer quatityId) {
		QuatitytypeEntity quatitytypeEntity = quatitytypeJpaRepository.findOne(quatityId);
		return quatitytypeServiceMapper.mapQuatitytypeEntityToQuatitytype(quatitytypeEntity);
	}

	@Override
	public List<Quatitytype> findAll() {
		Iterable<QuatitytypeEntity> entities = quatitytypeJpaRepository.findAll();
		List<Quatitytype> beans = new ArrayList<Quatitytype>();
		for(QuatitytypeEntity quatitytypeEntity : entities) {
			beans.add(quatitytypeServiceMapper.mapQuatitytypeEntityToQuatitytype(quatitytypeEntity));
		}
		return beans;
	}

	@Override
	public Quatitytype save(Quatitytype quatitytype) {
		return update(quatitytype) ;
	}

	@Override
	public Quatitytype create(Quatitytype quatitytype) {
		QuatitytypeEntity quatitytypeEntity = quatitytypeJpaRepository.findOne(quatitytype.getQuatityId());
		if( quatitytypeEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		quatitytypeEntity = new QuatitytypeEntity();
		quatitytypeServiceMapper.mapQuatitytypeToQuatitytypeEntity(quatitytype, quatitytypeEntity);
		QuatitytypeEntity quatitytypeEntitySaved = quatitytypeJpaRepository.save(quatitytypeEntity);
		return quatitytypeServiceMapper.mapQuatitytypeEntityToQuatitytype(quatitytypeEntitySaved);
	}

	@Override
	public Quatitytype update(Quatitytype quatitytype) {
		QuatitytypeEntity quatitytypeEntity = quatitytypeJpaRepository.findOne(quatitytype.getQuatityId());
		quatitytypeServiceMapper.mapQuatitytypeToQuatitytypeEntity(quatitytype, quatitytypeEntity);
		QuatitytypeEntity quatitytypeEntitySaved = quatitytypeJpaRepository.save(quatitytypeEntity);
		return quatitytypeServiceMapper.mapQuatitytypeEntityToQuatitytype(quatitytypeEntitySaved);
	}

	@Override
	public void delete(Integer quatityId) {
		quatitytypeJpaRepository.delete(quatityId);
	}

	public QuatitytypeJpaRepository getQuatitytypeJpaRepository() {
		return quatitytypeJpaRepository;
	}

	public void setQuatitytypeJpaRepository(QuatitytypeJpaRepository quatitytypeJpaRepository) {
		this.quatitytypeJpaRepository = quatitytypeJpaRepository;
	}

	public QuatitytypeServiceMapper getQuatitytypeServiceMapper() {
		return quatitytypeServiceMapper;
	}

	public void setQuatitytypeServiceMapper(QuatitytypeServiceMapper quatitytypeServiceMapper) {
		this.quatitytypeServiceMapper = quatitytypeServiceMapper;
	}

}
