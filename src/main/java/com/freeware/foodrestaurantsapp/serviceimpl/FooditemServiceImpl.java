/*
 * Created on 10 Jul 2016 ( Time 20:21:13 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package com.freeware.foodrestaurantsapp.serviceimpl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

import com.freeware.foodrestaurantsapp.beanmapper.BeanServiceMapper;
import com.freeware.foodrestaurantsapp.entity.FooditemEntity;
import com.freeware.foodrestaurantsapp.model.Fooditem;
import com.freeware.foodrestaurantsapp.repository.FooditemJpaRepository;
import com.freeware.foodrestaurantsapp.service.FooditemService;

/**
 * Implementation of FooditemService
 */
@Component
@Transactional
public class FooditemServiceImpl implements FooditemService {

	@Resource
	private FooditemJpaRepository fooditemJpaRepository;

	@Resource
	private BeanServiceMapper beanServiceMapper;
	@Override
	public Fooditem findById(Integer foodId) {
		FooditemEntity fooditemEntity = fooditemJpaRepository.findOne(foodId);
		return beanServiceMapper.map(fooditemEntity,Fooditem.class);
	}

	@Override
	public List<Fooditem> findAll() {
		Iterable<FooditemEntity> entities = fooditemJpaRepository.findAll();
		List<Fooditem> beans = new ArrayList<Fooditem>();
		for(FooditemEntity fooditemEntity : entities) {
			beans.add(beanServiceMapper.map(fooditemEntity,Fooditem.class));
		}
		return beans;
	}

	@Override
	public Fooditem save(Fooditem fooditem) {
		return update(fooditem) ;
	}

	@Override
	public Fooditem create(Fooditem fooditem) {
		FooditemEntity fooditemEntity = fooditemJpaRepository.findOne(fooditem.getFoodId());
		if( fooditemEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		fooditemEntity = new FooditemEntity();
		beanServiceMapper.map(fooditem, fooditemEntity);
		FooditemEntity fooditemEntitySaved = fooditemJpaRepository.save(fooditemEntity);
		return beanServiceMapper.map(fooditemEntitySaved,Fooditem.class);
	}

	@Override
	public Fooditem update(Fooditem fooditem) {
		FooditemEntity fooditemEntity = fooditemJpaRepository.findOne(fooditem.getFoodId());
		beanServiceMapper.map(fooditem, fooditemEntity);
		FooditemEntity fooditemEntitySaved = fooditemJpaRepository.save(fooditemEntity);
		return beanServiceMapper.map(fooditemEntitySaved,Fooditem.class);
	}

	@Override
	public void delete(Integer foodId) {
		fooditemJpaRepository.delete(foodId);
	}

	public FooditemJpaRepository getFooditemJpaRepository() {
		return fooditemJpaRepository;
	}

	public void setFooditemJpaRepository(FooditemJpaRepository fooditemJpaRepository) {
		this.fooditemJpaRepository = fooditemJpaRepository;
	}

	public BeanServiceMapper getFooditemServiceMapper() {
		return beanServiceMapper;
	}

	public void setFooditemServiceMapper(BeanServiceMapper beanServiceMapper) {
		this.beanServiceMapper = beanServiceMapper;
	}

}
